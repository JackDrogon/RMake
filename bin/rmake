#!/usr/bin/env ruby
# frozen_string_literal: true

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)

require 'optparse'
require 'rmake/cli'

# The default name of the RMakefile
RMAKEFILE = 'rmakefile'

# The environment indent
ENV_INDENT = '_indent_'

# The main function that runs the CLI and executes the target
def main
  options = {:rmakefile => RMAKEFILE, :root_dir => Dir.pwd}

  OptionParser.new do |opts|
    opts.banner = "Usage: rmake [options]"

    # TODO: add doc, remain arg is target, assert 1
    

    # opts.on("--target TARGET", "Specify the target to run") do |t|
    #   options[:target] = t
    # end
    
    # add -C dir options
    opts.on("-C", "--directory DIR", "Change to DIR before doing anything.") do |dir|
      options[:_rmake_cur_dir] = dir
    end

    # add list target options
    opts.on("-l", "--list", "List all targets") do |l|
      options[:list] = l
    end
  end.parse!

  if ARGV.length > 1
    raise "too many args"
  end

  options[:target] ||= ARGV[0]

  env = Env.new(ENV.to_h)
  # env[:root_dir] = options[:dir] if options[:dir]
  if options[:_rmake_cur_dir]
    Dir.chdir(options[:_rmake_cur_dir])
  end
  rmake = CLI.new(env, options)

  if options[:list]
    puts '================================='
    puts '----- list targets -----'
    puts rmake.list_targets
    puts '================================='
  else
    rmake.run
  end
end

# Call the main function if the last read line is not the current file
main if $LAST_READ_LINE != __FILE__
